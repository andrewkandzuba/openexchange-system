<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.openexchange</groupId>
        <artifactId>openexchange-system</artifactId>
        <version>1.0.2-SNAPSHOT</version>
    </parent>

    <artifactId>configserver</artifactId>
    <version>1.0.2-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>openexchange ::: ${project.artifactId}</name>

    <properties>
        <docker.host.address>docker-host-network</docker.host.address>
        <registry.server.port>8761</registry.server.port>
        <configuration.server.port>8888</configuration.server.port>
        <configuration.server.user>user</configuration.server.user>
        <configuration.server.password>changeit</configuration.server.password>
        <configuration.server.git.repo>https://github.com/andrewkandzuba/openexchange-configuration.git</configuration.server.git.repo>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-monitor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/bootstrap.yml</include>
                    <include>**/logback-spring.xml</include>
                </includes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/manifest.yml</include>
                </includes>
                <targetPath>${project.build.directory}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker-maven-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <alias>configserver</alias>
                            <name>%g/configserver:${project.version}</name>
                            <build>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <from>openjdk:8</from>
                                <assembly>
                                    <mode>tgz</mode>
                                    <permissions>ignore</permissions>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <includes>
                                                    <include>${project.groupId}:configserver:jar:${project.version}
                                                    </include>
                                                </includes>
                                                <outputFileNameMapping>app.jar</outputFileNameMapping>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                                <entryPoint>
                                    <shell>java ${env.JAVA_OPTS} -server -ea -XX:+AggressiveOpts -Xms512M -Xmx2G \
                                        -Djava.security.egd=file:/dev/urandom \
                                        -Dspring.rabbitmq.host=${docker.host.address} \
                                        -Dspring.cloud.config.server.git.uri=${configuration.server.git.repo} \
                                        -Dsecurity.user.password=${configuration.server.password} \
                                        -Dvcap.services.eureka-service.credentials.uri=http://${docker.host.address}:${registry.server.port} \
                                        -Deureka.instance.hostname=${docker.host.address} \
                                        -Deureka.instance.nonSecurePort=${configuration.server.port} \
                                        -Deureka.instance.metadataMap.user=${configuration.server.user} \
                                        -Deureka.instance.metadataMap.password=${configuration.server.password} -jar \
                                        /maven/app.jar
                                    </shell>
                                </entryPoint>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>